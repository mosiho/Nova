{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Progress=_ref=>{let{value,max=100,color='blue',showValue=false,valueFormat,size='md',label,className=''}=_ref;// Ensure value is between 0 and max\nconst clampedValue=Math.max(0,Math.min(value,max));const percentage=clampedValue/max*100;// Format the value display\nconst formattedValue=valueFormat?valueFormat(clampedValue,max):`${Math.round(percentage)}%`;// Height based on size\nconst heightClass={sm:'h-1.5',md:'h-2.5',lg:'h-4'}[size];// Color classes\nconst colorClass={blue:'bg-blue-600',green:'bg-green-600',red:'bg-red-600',yellow:'bg-yellow-600',gray:'bg-gray-600',purple:'bg-purple-600'}[color];return/*#__PURE__*/_jsxs(\"div\",{className:className,children:[(label||showValue)&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-1\",children:[label&&/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium text-gray-700\",children:label}),showValue&&/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium text-gray-500\",children:formattedValue})]}),/*#__PURE__*/_jsx(\"div\",{className:`progress ${heightClass} overflow-hidden`,role:\"progressbar\",\"aria-valuenow\":clampedValue,\"aria-valuemin\":0,\"aria-valuemax\":max,children:/*#__PURE__*/_jsx(\"div\",{className:`progress-bar ${colorClass} ${heightClass}`,style:{width:`${percentage}%`}})})]});};export default Progress;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","Progress","_ref","value","max","color","showValue","valueFormat","size","label","className","clampedValue","Math","min","percentage","formattedValue","round","heightClass","sm","md","lg","colorClass","blue","green","red","yellow","gray","purple","children","role","style","width"],"sources":["/Users/mosiho/Projects/Nova/frontend/src/components/ui/Progress.tsx"],"sourcesContent":["import React from 'react';\n\nexport type ProgressColor = 'blue' | 'green' | 'red' | 'yellow' | 'gray' | 'purple';\n\ninterface ProgressProps {\n  value: number;\n  max?: number;\n  color?: ProgressColor;\n  showValue?: boolean;\n  valueFormat?: (value: number, max: number) => string;\n  size?: 'sm' | 'md' | 'lg';\n  label?: React.ReactNode;\n  className?: string;\n}\n\nconst Progress: React.FC<ProgressProps> = ({\n  value,\n  max = 100,\n  color = 'blue',\n  showValue = false,\n  valueFormat,\n  size = 'md',\n  label,\n  className = ''\n}) => {\n  // Ensure value is between 0 and max\n  const clampedValue = Math.max(0, Math.min(value, max));\n  const percentage = (clampedValue / max) * 100;\n  \n  // Format the value display\n  const formattedValue = valueFormat \n    ? valueFormat(clampedValue, max) \n    : `${Math.round(percentage)}%`;\n  \n  // Height based on size\n  const heightClass = {\n    sm: 'h-1.5',\n    md: 'h-2.5',\n    lg: 'h-4'\n  }[size];\n  \n  // Color classes\n  const colorClass = {\n    blue: 'bg-blue-600',\n    green: 'bg-green-600',\n    red: 'bg-red-600',\n    yellow: 'bg-yellow-600',\n    gray: 'bg-gray-600',\n    purple: 'bg-purple-600'\n  }[color];\n  \n  return (\n    <div className={className}>\n      {(label || showValue) && (\n        <div className=\"flex justify-between items-center mb-1\">\n          {label && <div className=\"text-sm font-medium text-gray-700\">{label}</div>}\n          {showValue && <div className=\"text-sm font-medium text-gray-500\">{formattedValue}</div>}\n        </div>\n      )}\n      <div className={`progress ${heightClass} overflow-hidden`} role=\"progressbar\" \n          aria-valuenow={clampedValue} aria-valuemin={0} aria-valuemax={max}>\n        <div \n          className={`progress-bar ${colorClass} ${heightClass}`} \n          style={{ width: `${percentage}%` }}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Progress; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAe1B,KAAM,CAAAC,QAAiC,CAAGC,IAAA,EASpC,IATqC,CACzCC,KAAK,CACLC,GAAG,CAAG,GAAG,CACTC,KAAK,CAAG,MAAM,CACdC,SAAS,CAAG,KAAK,CACjBC,WAAW,CACXC,IAAI,CAAG,IAAI,CACXC,KAAK,CACLC,SAAS,CAAG,EACd,CAAC,CAAAR,IAAA,CACC;AACA,KAAM,CAAAS,YAAY,CAAGC,IAAI,CAACR,GAAG,CAAC,CAAC,CAAEQ,IAAI,CAACC,GAAG,CAACV,KAAK,CAAEC,GAAG,CAAC,CAAC,CACtD,KAAM,CAAAU,UAAU,CAAIH,YAAY,CAAGP,GAAG,CAAI,GAAG,CAE7C;AACA,KAAM,CAAAW,cAAc,CAAGR,WAAW,CAC9BA,WAAW,CAACI,YAAY,CAAEP,GAAG,CAAC,CAC9B,GAAGQ,IAAI,CAACI,KAAK,CAACF,UAAU,CAAC,GAAG,CAEhC;AACA,KAAM,CAAAG,WAAW,CAAG,CAClBC,EAAE,CAAE,OAAO,CACXC,EAAE,CAAE,OAAO,CACXC,EAAE,CAAE,KACN,CAAC,CAACZ,IAAI,CAAC,CAEP;AACA,KAAM,CAAAa,UAAU,CAAG,CACjBC,IAAI,CAAE,aAAa,CACnBC,KAAK,CAAE,cAAc,CACrBC,GAAG,CAAE,YAAY,CACjBC,MAAM,CAAE,eAAe,CACvBC,IAAI,CAAE,aAAa,CACnBC,MAAM,CAAE,eACV,CAAC,CAACtB,KAAK,CAAC,CAER,mBACEL,KAAA,QAAKU,SAAS,CAAEA,SAAU,CAAAkB,QAAA,EACvB,CAACnB,KAAK,EAAIH,SAAS,gBAClBN,KAAA,QAAKU,SAAS,CAAC,wCAAwC,CAAAkB,QAAA,EACpDnB,KAAK,eAAIX,IAAA,QAAKY,SAAS,CAAC,mCAAmC,CAAAkB,QAAA,CAAEnB,KAAK,CAAM,CAAC,CACzEH,SAAS,eAAIR,IAAA,QAAKY,SAAS,CAAC,mCAAmC,CAAAkB,QAAA,CAAEb,cAAc,CAAM,CAAC,EACpF,CACN,cACDjB,IAAA,QAAKY,SAAS,CAAE,YAAYO,WAAW,kBAAmB,CAACY,IAAI,CAAC,aAAa,CACzE,gBAAelB,YAAa,CAAC,gBAAe,CAAE,CAAC,gBAAeP,GAAI,CAAAwB,QAAA,cACpE9B,IAAA,QACEY,SAAS,CAAE,gBAAgBW,UAAU,IAAIJ,WAAW,EAAG,CACvDa,KAAK,CAAE,CAAEC,KAAK,CAAE,GAAGjB,UAAU,GAAI,CAAE,CAC/B,CAAC,CACJ,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAb,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}