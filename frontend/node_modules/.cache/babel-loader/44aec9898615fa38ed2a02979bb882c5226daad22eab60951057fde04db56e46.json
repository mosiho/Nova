{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{// Check for existing auth token in localStorage\nconst token=localStorage.getItem('authToken');if(token){// Set auth header for axios requests\naxios.defaults.headers.common['Authorization']=`Bearer ${token}`;// Fetch user profile\nfetchUserProfile();}else{setLoading(false);}},[]);const fetchUserProfile=async()=>{try{// In a real app, this would be a call to your backend API\n// For demo purposes, we're simulating a user\nsetTimeout(()=>{const mockUser={_id:'123456',firstName:'John',lastName:'Doe',email:'john.doe@example.com',subscriptionPlan:'free'};setUser(mockUser);setLoading(false);},500);}catch(err){var _err$response,_err$response$data;setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||'Failed to fetch user profile');setLoading(false);}};const login=async(email,password)=>{try{setLoading(true);setError(null);// In a real app, this would be a call to your backend API\n// For demo purposes, we're simulating a successful login\nsetTimeout(()=>{const mockToken='mock-auth-token';const mockUser={_id:'123456',firstName:'John',lastName:'Doe',email,subscriptionPlan:'free'};// Store token in localStorage\nlocalStorage.setItem('authToken',mockToken);// Set auth header for axios requests\naxios.defaults.headers.common['Authorization']=`Bearer ${mockToken}`;setUser(mockUser);setLoading(false);},1000);}catch(err){var _err$response2,_err$response2$data;setError(((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.message)||'Invalid email or password');setLoading(false);throw err;}};const register=async(firstName,lastName,email,password)=>{try{setLoading(true);setError(null);// In a real app, this would be a call to your backend API\n// For demo purposes, we're simulating a successful registration\nsetTimeout(()=>{const mockToken='mock-auth-token';const mockUser={_id:'123456',firstName,lastName,email,subscriptionPlan:'free'};// Store token in localStorage\nlocalStorage.setItem('authToken',mockToken);// Set auth header for axios requests\naxios.defaults.headers.common['Authorization']=`Bearer ${mockToken}`;setUser(mockUser);setLoading(false);},1000);}catch(err){var _err$response3,_err$response3$data;setError(((_err$response3=err.response)===null||_err$response3===void 0?void 0:(_err$response3$data=_err$response3.data)===null||_err$response3$data===void 0?void 0:_err$response3$data.message)||'Failed to register');setLoading(false);throw err;}};const logout=()=>{// Remove token from localStorage\nlocalStorage.removeItem('authToken');// Remove auth header for axios requests\ndelete axios.defaults.headers.common['Authorization'];// Clear user state\nsetUser(null);};const updateProfile=async(firstName,lastName)=>{try{setLoading(true);setError(null);// In a real app, this would be a call to your backend API\n// For demo purposes, we're simulating a successful profile update\nsetTimeout(()=>{if(user){const updatedUser={...user,firstName,lastName};setUser(updatedUser);}setLoading(false);},1000);}catch(err){var _err$response4,_err$response4$data;setError(((_err$response4=err.response)===null||_err$response4===void 0?void 0:(_err$response4$data=_err$response4.data)===null||_err$response4$data===void 0?void 0:_err$response4$data.message)||'Failed to update profile');setLoading(false);throw err;}};const changePassword=async(currentPassword,newPassword)=>{try{setLoading(true);setError(null);// In a real app, this would be a call to your backend API\n// For demo purposes, we're simulating a successful password change\nsetTimeout(()=>{setLoading(false);},1000);}catch(err){var _err$response5,_err$response5$data;setError(((_err$response5=err.response)===null||_err$response5===void 0?void 0:(_err$response5$data=_err$response5.data)===null||_err$response5$data===void 0?void 0:_err$response5$data.message)||'Failed to change password');setLoading(false);throw err;}};const clearError=()=>{setError(null);};const value={user,isAuthenticated:!!user,loading,error,login,register,logout,updateProfile,changePassword,clearError};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","error","setError","token","localStorage","getItem","defaults","headers","common","fetchUserProfile","setTimeout","mockUser","_id","firstName","lastName","email","subscriptionPlan","err","_err$response","_err$response$data","response","data","message","login","password","mockToken","setItem","_err$response2","_err$response2$data","register","_err$response3","_err$response3$data","logout","removeItem","updateProfile","updatedUser","_err$response4","_err$response4$data","changePassword","currentPassword","newPassword","_err$response5","_err$response5$data","clearError","value","isAuthenticated","Provider"],"sources":["/Users/mosiho/Projects/Nova/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport axios from 'axios';\n\ninterface User {\n  _id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  subscriptionPlan: 'free' | 'premium';\n}\n\ninterface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  loading: boolean;\n  error: string | null;\n  login: (email: string, password: string) => Promise<void>;\n  register: (firstName: string, lastName: string, email: string, password: string) => Promise<void>;\n  logout: () => void;\n  updateProfile: (firstName: string, lastName: string) => Promise<void>;\n  changePassword: (currentPassword: string, newPassword: string) => Promise<void>;\n  clearError: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    // Check for existing auth token in localStorage\n    const token = localStorage.getItem('authToken');\n    \n    if (token) {\n      // Set auth header for axios requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      \n      // Fetch user profile\n      fetchUserProfile();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const fetchUserProfile = async () => {\n    try {\n      // In a real app, this would be a call to your backend API\n      // For demo purposes, we're simulating a user\n      setTimeout(() => {\n        const mockUser: User = {\n          _id: '123456',\n          firstName: 'John',\n          lastName: 'Doe',\n          email: 'john.doe@example.com',\n          subscriptionPlan: 'free'\n        };\n        \n        setUser(mockUser);\n        setLoading(false);\n      }, 500);\n    } catch (err: any) {\n      setError(err.response?.data?.message || 'Failed to fetch user profile');\n      setLoading(false);\n    }\n  };\n\n  const login = async (email: string, password: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // In a real app, this would be a call to your backend API\n      // For demo purposes, we're simulating a successful login\n      setTimeout(() => {\n        const mockToken = 'mock-auth-token';\n        const mockUser: User = {\n          _id: '123456',\n          firstName: 'John',\n          lastName: 'Doe',\n          email,\n          subscriptionPlan: 'free'\n        };\n        \n        // Store token in localStorage\n        localStorage.setItem('authToken', mockToken);\n        \n        // Set auth header for axios requests\n        axios.defaults.headers.common['Authorization'] = `Bearer ${mockToken}`;\n        \n        setUser(mockUser);\n        setLoading(false);\n      }, 1000);\n    } catch (err: any) {\n      setError(err.response?.data?.message || 'Invalid email or password');\n      setLoading(false);\n      throw err;\n    }\n  };\n\n  const register = async (firstName: string, lastName: string, email: string, password: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // In a real app, this would be a call to your backend API\n      // For demo purposes, we're simulating a successful registration\n      setTimeout(() => {\n        const mockToken = 'mock-auth-token';\n        const mockUser: User = {\n          _id: '123456',\n          firstName,\n          lastName,\n          email,\n          subscriptionPlan: 'free'\n        };\n        \n        // Store token in localStorage\n        localStorage.setItem('authToken', mockToken);\n        \n        // Set auth header for axios requests\n        axios.defaults.headers.common['Authorization'] = `Bearer ${mockToken}`;\n        \n        setUser(mockUser);\n        setLoading(false);\n      }, 1000);\n    } catch (err: any) {\n      setError(err.response?.data?.message || 'Failed to register');\n      setLoading(false);\n      throw err;\n    }\n  };\n\n  const logout = () => {\n    // Remove token from localStorage\n    localStorage.removeItem('authToken');\n    \n    // Remove auth header for axios requests\n    delete axios.defaults.headers.common['Authorization'];\n    \n    // Clear user state\n    setUser(null);\n  };\n\n  const updateProfile = async (firstName: string, lastName: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // In a real app, this would be a call to your backend API\n      // For demo purposes, we're simulating a successful profile update\n      setTimeout(() => {\n        if (user) {\n          const updatedUser = { ...user, firstName, lastName };\n          setUser(updatedUser);\n        }\n        setLoading(false);\n      }, 1000);\n    } catch (err: any) {\n      setError(err.response?.data?.message || 'Failed to update profile');\n      setLoading(false);\n      throw err;\n    }\n  };\n\n  const changePassword = async (currentPassword: string, newPassword: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // In a real app, this would be a call to your backend API\n      // For demo purposes, we're simulating a successful password change\n      setTimeout(() => {\n        setLoading(false);\n      }, 1000);\n    } catch (err: any) {\n      setError(err.response?.data?.message || 'Failed to change password');\n      setLoading(false);\n      throw err;\n    }\n  };\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateProfile,\n    changePassword,\n    clearError\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}