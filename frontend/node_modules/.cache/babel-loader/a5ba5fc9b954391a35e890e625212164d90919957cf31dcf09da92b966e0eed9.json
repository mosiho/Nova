{"ast":null,"code":"var _jsxFileName = \"/Users/mosiho/Projects/Nova/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Check for existing auth token in localStorage\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      // Set auth header for axios requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Fetch user profile\n      fetchUserProfile();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const fetchUserProfile = async () => {\n    try {\n      // In a real app, this would be a call to your backend API\n      // For demo purposes, we're simulating a user\n      setTimeout(() => {\n        const mockUser = {\n          _id: '123456',\n          firstName: 'John',\n          lastName: 'Doe',\n          email: 'john.doe@example.com',\n          subscriptionPlan: 'free'\n        };\n        setUser(mockUser);\n        setLoading(false);\n      }, 500);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to fetch user profile');\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // In a real app, this would be a call to your backend API\n      // For demo purposes, we're simulating a successful login\n      setTimeout(() => {\n        const mockToken = 'mock-auth-token';\n        const mockUser = {\n          _id: '123456',\n          firstName: 'John',\n          lastName: 'Doe',\n          email,\n          subscriptionPlan: 'free'\n        };\n\n        // Store token in localStorage\n        localStorage.setItem('authToken', mockToken);\n\n        // Set auth header for axios requests\n        axios.defaults.headers.common['Authorization'] = `Bearer ${mockToken}`;\n        setUser(mockUser);\n        setLoading(false);\n      }, 1000);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Invalid email or password');\n      setLoading(false);\n      throw err;\n    }\n  };\n  const register = async (firstName, lastName, email, password) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // In a real app, this would be a call to your backend API\n      // For demo purposes, we're simulating a successful registration\n      setTimeout(() => {\n        const mockToken = 'mock-auth-token';\n        const mockUser = {\n          _id: '123456',\n          firstName,\n          lastName,\n          email,\n          subscriptionPlan: 'free'\n        };\n\n        // Store token in localStorage\n        localStorage.setItem('authToken', mockToken);\n\n        // Set auth header for axios requests\n        axios.defaults.headers.common['Authorization'] = `Bearer ${mockToken}`;\n        setUser(mockUser);\n        setLoading(false);\n      }, 1000);\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Failed to register');\n      setLoading(false);\n      throw err;\n    }\n  };\n  const logout = () => {\n    // Remove token from localStorage\n    localStorage.removeItem('authToken');\n\n    // Remove auth header for axios requests\n    delete axios.defaults.headers.common['Authorization'];\n\n    // Clear user state\n    setUser(null);\n  };\n  const updateProfile = async (firstName, lastName) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // In a real app, this would be a call to your backend API\n      // For demo purposes, we're simulating a successful profile update\n      setTimeout(() => {\n        if (user) {\n          const updatedUser = {\n            ...user,\n            firstName,\n            lastName\n          };\n          setUser(updatedUser);\n        }\n        setLoading(false);\n      }, 1000);\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Failed to update profile');\n      setLoading(false);\n      throw err;\n    }\n  };\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // In a real app, this would be a call to your backend API\n      // For demo purposes, we're simulating a successful password change\n      setTimeout(() => {\n        setLoading(false);\n      }, 1000);\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      setError(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || 'Failed to change password');\n      setLoading(false);\n      throw err;\n    }\n  };\n  const clearError = () => {\n    setError(null);\n  };\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateProfile,\n    changePassword,\n    clearError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","error","setError","token","localStorage","getItem","defaults","headers","common","fetchUserProfile","setTimeout","mockUser","_id","firstName","lastName","email","subscriptionPlan","err","_err$response","_err$response$data","response","data","message","login","password","mockToken","setItem","_err$response2","_err$response2$data","register","_err$response3","_err$response3$data","logout","removeItem","updateProfile","updatedUser","_err$response4","_err$response4$data","changePassword","currentPassword","newPassword","_err$response5","_err$response5$data","clearError","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mosiho/Projects/Nova/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport axios from 'axios';\n\ninterface User {\n  _id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  subscriptionPlan: 'free' | 'premium';\n}\n\ninterface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  loading: boolean;\n  error: string | null;\n  login: (email: string, password: string) => Promise<void>;\n  register: (firstName: string, lastName: string, email: string, password: string) => Promise<void>;\n  logout: () => void;\n  updateProfile: (firstName: string, lastName: string) => Promise<void>;\n  changePassword: (currentPassword: string, newPassword: string) => Promise<void>;\n  clearError: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    // Check for existing auth token in localStorage\n    const token = localStorage.getItem('authToken');\n    \n    if (token) {\n      // Set auth header for axios requests\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      \n      // Fetch user profile\n      fetchUserProfile();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const fetchUserProfile = async () => {\n    try {\n      // In a real app, this would be a call to your backend API\n      // For demo purposes, we're simulating a user\n      setTimeout(() => {\n        const mockUser: User = {\n          _id: '123456',\n          firstName: 'John',\n          lastName: 'Doe',\n          email: 'john.doe@example.com',\n          subscriptionPlan: 'free'\n        };\n        \n        setUser(mockUser);\n        setLoading(false);\n      }, 500);\n    } catch (err: any) {\n      setError(err.response?.data?.message || 'Failed to fetch user profile');\n      setLoading(false);\n    }\n  };\n\n  const login = async (email: string, password: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // In a real app, this would be a call to your backend API\n      // For demo purposes, we're simulating a successful login\n      setTimeout(() => {\n        const mockToken = 'mock-auth-token';\n        const mockUser: User = {\n          _id: '123456',\n          firstName: 'John',\n          lastName: 'Doe',\n          email,\n          subscriptionPlan: 'free'\n        };\n        \n        // Store token in localStorage\n        localStorage.setItem('authToken', mockToken);\n        \n        // Set auth header for axios requests\n        axios.defaults.headers.common['Authorization'] = `Bearer ${mockToken}`;\n        \n        setUser(mockUser);\n        setLoading(false);\n      }, 1000);\n    } catch (err: any) {\n      setError(err.response?.data?.message || 'Invalid email or password');\n      setLoading(false);\n      throw err;\n    }\n  };\n\n  const register = async (firstName: string, lastName: string, email: string, password: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // In a real app, this would be a call to your backend API\n      // For demo purposes, we're simulating a successful registration\n      setTimeout(() => {\n        const mockToken = 'mock-auth-token';\n        const mockUser: User = {\n          _id: '123456',\n          firstName,\n          lastName,\n          email,\n          subscriptionPlan: 'free'\n        };\n        \n        // Store token in localStorage\n        localStorage.setItem('authToken', mockToken);\n        \n        // Set auth header for axios requests\n        axios.defaults.headers.common['Authorization'] = `Bearer ${mockToken}`;\n        \n        setUser(mockUser);\n        setLoading(false);\n      }, 1000);\n    } catch (err: any) {\n      setError(err.response?.data?.message || 'Failed to register');\n      setLoading(false);\n      throw err;\n    }\n  };\n\n  const logout = () => {\n    // Remove token from localStorage\n    localStorage.removeItem('authToken');\n    \n    // Remove auth header for axios requests\n    delete axios.defaults.headers.common['Authorization'];\n    \n    // Clear user state\n    setUser(null);\n  };\n\n  const updateProfile = async (firstName: string, lastName: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // In a real app, this would be a call to your backend API\n      // For demo purposes, we're simulating a successful profile update\n      setTimeout(() => {\n        if (user) {\n          const updatedUser = { ...user, firstName, lastName };\n          setUser(updatedUser);\n        }\n        setLoading(false);\n      }, 1000);\n    } catch (err: any) {\n      setError(err.response?.data?.message || 'Failed to update profile');\n      setLoading(false);\n      throw err;\n    }\n  };\n\n  const changePassword = async (currentPassword: string, newPassword: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // In a real app, this would be a call to your backend API\n      // For demo purposes, we're simulating a successful password change\n      setTimeout(() => {\n        setLoading(false);\n      }, 1000);\n    } catch (err: any) {\n      setError(err.response?.data?.message || 'Failed to change password');\n      setLoading(false);\n      throw err;\n    }\n  };\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  const value = {\n    user,\n    isAuthenticated: !!user,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateProfile,\n    changePassword,\n    clearError\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}