{"ast":null,"code":"var _jsxFileName = \"/Users/mosiho/Projects/Nova/frontend/src/components/UI/Badge.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Badge = ({\n  color = 'gray',\n  variant = 'solid',\n  children,\n  className = '',\n  icon,\n  onClick,\n  ariaLabel,\n  animated = true\n}) => {\n  _s();\n  const [isPressed, setIsPressed] = useState(false);\n  const getBaseClass = () => {\n    if (variant === 'outline') {\n      return `badge-outline badge-outline-${color}`;\n    }\n    return `badge-${color}`;\n  };\n  const isInteractive = !!onClick;\n\n  // Add animation classes\n  const animationClass = animated ? 'transition-all duration-150' : '';\n  const pressedClass = isPressed && animated ? 'transform scale-95' : '';\n  const interactiveClass = isInteractive && animated ? 'hover:shadow-sm hover:scale-105' : '';\n  const badgeClass = `\n    badge \n    ${getBaseClass()} \n    ${isInteractive ? 'cursor-pointer' : ''} \n    ${className}\n    ${animationClass}\n    ${pressedClass}\n    ${interactiveClass}\n  `;\n\n  // Handle keyboard interaction for interactive badges\n  const handleKeyDown = e => {\n    if (isInteractive && (e.key === 'Enter' || e.key === ' ')) {\n      e.preventDefault();\n      setIsPressed(true);\n      onClick();\n    }\n  };\n  const handleKeyUp = () => {\n    if (isInteractive) {\n      setIsPressed(false);\n    }\n  };\n  const handleMouseDown = () => {\n    if (isInteractive) {\n      setIsPressed(true);\n    }\n  };\n  const handleMouseUp = () => {\n    if (isInteractive) {\n      setIsPressed(false);\n    }\n  };\n  const handleMouseLeave = () => {\n    if (isInteractive) {\n      setIsPressed(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: badgeClass,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onMouseDown: handleMouseDown,\n    onMouseUp: handleMouseUp,\n    onMouseLeave: handleMouseLeave,\n    role: isInteractive ? 'button' : undefined,\n    tabIndex: isInteractive ? 0 : undefined,\n    \"aria-label\": ariaLabel,\n    \"aria-pressed\": isInteractive ? isPressed : undefined,\n    children: [icon && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `mr-1 ${animated ? 'inline-block transform transition-transform group-hover:rotate-6' : ''}`,\n      \"aria-hidden\": \"true\",\n      children: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: animated ? 'transition-all duration-150' : '',\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(Badge, \"xbZH3DzXyTYDyv25dIidXDvNjLA=\");\n_c = Badge;\nexport default Badge;\nvar _c;\n$RefreshReg$(_c, \"Badge\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Badge","color","variant","children","className","icon","onClick","ariaLabel","animated","_s","isPressed","setIsPressed","getBaseClass","isInteractive","animationClass","pressedClass","interactiveClass","badgeClass","handleKeyDown","e","key","preventDefault","handleKeyUp","handleMouseDown","handleMouseUp","handleMouseLeave","onKeyDown","onKeyUp","onMouseDown","onMouseUp","onMouseLeave","role","undefined","tabIndex","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mosiho/Projects/Nova/frontend/src/components/UI/Badge.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nexport type BadgeColor = 'blue' | 'green' | 'red' | 'yellow' | 'gray' | 'purple';\nexport type BadgeVariant = 'solid' | 'outline';\n\ninterface BadgeProps {\n  color?: BadgeColor;\n  variant?: BadgeVariant;\n  children: React.ReactNode;\n  className?: string;\n  icon?: React.ReactNode;\n  onClick?: () => void;\n  ariaLabel?: string;\n  animated?: boolean;\n}\n\nconst Badge: React.FC<BadgeProps> = ({\n  color = 'gray',\n  variant = 'solid',\n  children,\n  className = '',\n  icon,\n  onClick,\n  ariaLabel,\n  animated = true\n}) => {\n  const [isPressed, setIsPressed] = useState(false);\n  \n  const getBaseClass = (): string => {\n    if (variant === 'outline') {\n      return `badge-outline badge-outline-${color}`;\n    }\n    \n    return `badge-${color}`;\n  };\n  \n  const isInteractive = !!onClick;\n  \n  // Add animation classes\n  const animationClass = animated \n    ? 'transition-all duration-150' \n    : '';\n  \n  const pressedClass = isPressed && animated \n    ? 'transform scale-95' \n    : '';\n  \n  const interactiveClass = isInteractive && animated\n    ? 'hover:shadow-sm hover:scale-105' \n    : '';\n  \n  const badgeClass = `\n    badge \n    ${getBaseClass()} \n    ${isInteractive ? 'cursor-pointer' : ''} \n    ${className}\n    ${animationClass}\n    ${pressedClass}\n    ${interactiveClass}\n  `;\n  \n  // Handle keyboard interaction for interactive badges\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (isInteractive && (e.key === 'Enter' || e.key === ' ')) {\n      e.preventDefault();\n      setIsPressed(true);\n      onClick();\n    }\n  };\n  \n  const handleKeyUp = () => {\n    if (isInteractive) {\n      setIsPressed(false);\n    }\n  };\n  \n  const handleMouseDown = () => {\n    if (isInteractive) {\n      setIsPressed(true);\n    }\n  };\n  \n  const handleMouseUp = () => {\n    if (isInteractive) {\n      setIsPressed(false);\n    }\n  };\n  \n  const handleMouseLeave = () => {\n    if (isInteractive) {\n      setIsPressed(false);\n    }\n  };\n  \n  return (\n    <span \n      className={badgeClass}\n      onClick={onClick}\n      onKeyDown={handleKeyDown}\n      onKeyUp={handleKeyUp}\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      onMouseLeave={handleMouseLeave}\n      role={isInteractive ? 'button' : undefined}\n      tabIndex={isInteractive ? 0 : undefined}\n      aria-label={ariaLabel}\n      aria-pressed={isInteractive ? isPressed : undefined}\n    >\n      {icon && (\n        <span \n          className={`mr-1 ${animated ? 'inline-block transform transition-transform group-hover:rotate-6' : ''}`} \n          aria-hidden=\"true\"\n        >\n          {icon}\n        </span>\n      )}\n      <span className={animated ? 'transition-all duration-150' : ''}>\n        {children}\n      </span>\n    </span>\n  );\n};\n\nexport default Badge; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}