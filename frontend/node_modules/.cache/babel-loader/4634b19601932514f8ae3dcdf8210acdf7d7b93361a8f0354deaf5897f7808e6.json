{"ast":null,"code":"import React from'react';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const Skeleton=_ref=>{let{variant='text',width,height,count=1,className='',circle=false}=_ref;const getClassName=()=>{// If circle prop is true, override variant to 'circle'\nconst finalVariant=circle?'circle':variant;switch(finalVariant){case'circle':return'skeleton-circle';case'text':return'skeleton-text';default:return'skeleton';}};const baseClass=getClassName();const style={};if(width){style.width=typeof width==='number'?`${width}px`:width;}if(height){style.height=typeof height==='number'?`${height}px`:height;}// Create the specified number of skeleton items\nconst items=[];for(let i=0;i<count;i++){items.push(/*#__PURE__*/_jsx(\"div\",{className:`${baseClass} ${className}`,style:style,\"aria-hidden\":\"true\"},i));}return/*#__PURE__*/_jsx(_Fragment,{children:items});};// Predefined skeleton components\nexport const SkeletonText=_ref2=>{let{lines=3,className='',lineHeight,width}=_ref2;return/*#__PURE__*/_jsx(\"div\",{className:className,children:Array.from({length:lines}).map((_,index)=>/*#__PURE__*/_jsx(Skeleton,{variant:\"text\",className:\"mb-2 last:mb-0\",height:lineHeight,width:index===lines-1&&width?typeof width==='number'?`${width*0.8}px`:width:width},index))});};export const SkeletonCard=_ref3=>{let{header=true,footer=false,lines=3,className=''}=_ref3;return/*#__PURE__*/_jsxs(\"div\",{className:`card ${className}`,children:[header&&/*#__PURE__*/_jsx(\"div\",{className:\"card-header\",children:/*#__PURE__*/_jsx(Skeleton,{variant:\"text\",width:\"40%\",height:20})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-body\",children:/*#__PURE__*/_jsx(SkeletonText,{lines:lines})}),footer&&/*#__PURE__*/_jsx(\"div\",{className:\"card-footer\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-end\",children:/*#__PURE__*/_jsx(Skeleton,{variant:\"rectangle\",width:100,height:30})})})]});};export default Skeleton;","map":{"version":3,"names":["React","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Skeleton","_ref","variant","width","height","count","className","circle","getClassName","finalVariant","baseClass","style","items","i","push","children","SkeletonText","_ref2","lines","lineHeight","Array","from","length","map","_","index","SkeletonCard","_ref3","header","footer"],"sources":["/Users/mosiho/Projects/Nova/frontend/src/components/ui/Skeleton.tsx"],"sourcesContent":["import React from 'react';\n\nexport type SkeletonVariant = 'text' | 'circle' | 'rectangle';\n\ninterface SkeletonProps {\n  variant?: SkeletonVariant;\n  width?: string | number;\n  height?: string | number;\n  count?: number;\n  className?: string;\n  circle?: boolean;\n}\n\nconst Skeleton: React.FC<SkeletonProps> = ({\n  variant = 'text',\n  width,\n  height,\n  count = 1,\n  className = '',\n  circle = false\n}) => {\n  const getClassName = () => {\n    // If circle prop is true, override variant to 'circle'\n    const finalVariant = circle ? 'circle' : variant;\n    \n    switch (finalVariant) {\n      case 'circle':\n        return 'skeleton-circle';\n      case 'text':\n        return 'skeleton-text';\n      default:\n        return 'skeleton';\n    }\n  };\n  \n  const baseClass = getClassName();\n  const style: React.CSSProperties = {};\n  \n  if (width) {\n    style.width = typeof width === 'number' ? `${width}px` : width;\n  }\n  \n  if (height) {\n    style.height = typeof height === 'number' ? `${height}px` : height;\n  }\n  \n  // Create the specified number of skeleton items\n  const items = [];\n  for (let i = 0; i < count; i++) {\n    items.push(\n      <div\n        key={i}\n        className={`${baseClass} ${className}`}\n        style={style}\n        aria-hidden=\"true\"\n      />\n    );\n  }\n  \n  return <>{items}</>;\n};\n\n// Predefined skeleton components\ninterface SkeletonTextProps {\n  lines?: number;\n  className?: string;\n  lineHeight?: string | number;\n  width?: string | number;\n}\n\nexport const SkeletonText: React.FC<SkeletonTextProps> = ({\n  lines = 3,\n  className = '',\n  lineHeight,\n  width\n}) => {\n  return (\n    <div className={className}>\n      {Array.from({ length: lines }).map((_, index) => (\n        <Skeleton\n          key={index}\n          variant=\"text\"\n          className=\"mb-2 last:mb-0\"\n          height={lineHeight}\n          width={index === lines - 1 && width ? (typeof width === 'number' ? `${width * 0.8}px` : width) : width}\n        />\n      ))}\n    </div>\n  );\n};\n\ninterface SkeletonCardProps {\n  header?: boolean;\n  footer?: boolean;\n  lines?: number;\n  className?: string;\n}\n\nexport const SkeletonCard: React.FC<SkeletonCardProps> = ({\n  header = true,\n  footer = false,\n  lines = 3,\n  className = ''\n}) => {\n  return (\n    <div className={`card ${className}`}>\n      {header && (\n        <div className=\"card-header\">\n          <Skeleton variant=\"text\" width=\"40%\" height={20} />\n        </div>\n      )}\n      <div className=\"card-body\">\n        <SkeletonText lines={lines} />\n      </div>\n      {footer && (\n        <div className=\"card-footer\">\n          <div className=\"flex justify-end\">\n            <Skeleton variant=\"rectangle\" width={100} height={30} />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Skeleton; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}