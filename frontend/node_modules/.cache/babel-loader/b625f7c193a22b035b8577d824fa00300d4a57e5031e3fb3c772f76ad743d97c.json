{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";/**\n * A wrapper component that adds smooth transitions when navigating between pages\n */const PageTransition=_ref=>{let{children,location,className='',transitionType='fade',duration=300}=_ref;const[isVisible,setIsVisible]=useState(false);const[currentChildren,setCurrentChildren]=useState(children);useEffect(()=>{// Make component visible on mount\nsetIsVisible(true);},[]);useEffect(()=>{// When location/children change, start transition\nif(children!==currentChildren){// Hide component\nsetIsVisible(false);// After transition duration, update children and show again\nconst timer=setTimeout(()=>{setCurrentChildren(children);setIsVisible(true);},duration);return()=>clearTimeout(timer);}},[children,currentChildren,duration]);// Generate animation styles\nconst animationStyle={transition:`opacity ${duration}ms, transform ${duration}ms`,opacity:isVisible?1:0};// Add transform based on transition type\nif(transitionType==='slide-up'){animationStyle.transform=isVisible?'translateY(0)':'translateY(20px)';}else if(transitionType==='slide-down'){animationStyle.transform=isVisible?'translateY(0)':'translateY(-20px)';}else if(transitionType==='scale'){animationStyle.transform=isVisible?'scale(1)':'scale(0.95)';}// Use no animation for transitionType === 'none'\nconst finalStyle=transitionType==='none'?{}:animationStyle;return/*#__PURE__*/_jsx(\"div\",{className:className,style:finalStyle,children:currentChildren});};export default PageTransition;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","PageTransition","_ref","children","location","className","transitionType","duration","isVisible","setIsVisible","currentChildren","setCurrentChildren","timer","setTimeout","clearTimeout","animationStyle","transition","opacity","transform","finalStyle","style"],"sources":["/Users/mosiho/Projects/Nova/frontend/src/components/ui/PageTransition.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\ninterface PageTransitionProps {\n  children: React.ReactNode;\n  location?: string;\n  className?: string;\n  transitionType?: 'fade' | 'slide-up' | 'slide-down' | 'scale' | 'none';\n  duration?: number;\n}\n\n/**\n * A wrapper component that adds smooth transitions when navigating between pages\n */\nconst PageTransition: React.FC<PageTransitionProps> = ({\n  children,\n  location,\n  className = '',\n  transitionType = 'fade',\n  duration = 300,\n}) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [currentChildren, setCurrentChildren] = useState(children);\n\n  useEffect(() => {\n    // Make component visible on mount\n    setIsVisible(true);\n  }, []);\n\n  useEffect(() => {\n    // When location/children change, start transition\n    if (children !== currentChildren) {\n      // Hide component\n      setIsVisible(false);\n\n      // After transition duration, update children and show again\n      const timer = setTimeout(() => {\n        setCurrentChildren(children);\n        setIsVisible(true);\n      }, duration);\n\n      return () => clearTimeout(timer);\n    }\n  }, [children, currentChildren, duration]);\n\n  // Generate animation styles\n  const animationStyle: React.CSSProperties = {\n    transition: `opacity ${duration}ms, transform ${duration}ms`,\n    opacity: isVisible ? 1 : 0,\n  };\n\n  // Add transform based on transition type\n  if (transitionType === 'slide-up') {\n    animationStyle.transform = isVisible ? 'translateY(0)' : 'translateY(20px)';\n  } else if (transitionType === 'slide-down') {\n    animationStyle.transform = isVisible ? 'translateY(0)' : 'translateY(-20px)';\n  } else if (transitionType === 'scale') {\n    animationStyle.transform = isVisible ? 'scale(1)' : 'scale(0.95)';\n  }\n\n  // Use no animation for transitionType === 'none'\n  const finalStyle = transitionType === 'none' ? {} : animationStyle;\n\n  return (\n    <div className={className} style={finalStyle}>\n      {currentChildren}\n    </div>\n  );\n};\n\nexport default PageTransition; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAUnD;AACA;AACA,GACA,KAAM,CAAAC,cAA6C,CAAGC,IAAA,EAMhD,IANiD,CACrDC,QAAQ,CACRC,QAAQ,CACRC,SAAS,CAAG,EAAE,CACdC,cAAc,CAAG,MAAM,CACvBC,QAAQ,CAAG,GACb,CAAC,CAAAL,IAAA,CACC,KAAM,CAACM,SAAS,CAAEC,YAAY,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACa,eAAe,CAAEC,kBAAkB,CAAC,CAAGd,QAAQ,CAACM,QAAQ,CAAC,CAEhEL,SAAS,CAAC,IAAM,CACd;AACAW,YAAY,CAAC,IAAI,CAAC,CACpB,CAAC,CAAE,EAAE,CAAC,CAENX,SAAS,CAAC,IAAM,CACd;AACA,GAAIK,QAAQ,GAAKO,eAAe,CAAE,CAChC;AACAD,YAAY,CAAC,KAAK,CAAC,CAEnB;AACA,KAAM,CAAAG,KAAK,CAAGC,UAAU,CAAC,IAAM,CAC7BF,kBAAkB,CAACR,QAAQ,CAAC,CAC5BM,YAAY,CAAC,IAAI,CAAC,CACpB,CAAC,CAAEF,QAAQ,CAAC,CAEZ,MAAO,IAAMO,YAAY,CAACF,KAAK,CAAC,CAClC,CACF,CAAC,CAAE,CAACT,QAAQ,CAAEO,eAAe,CAAEH,QAAQ,CAAC,CAAC,CAEzC;AACA,KAAM,CAAAQ,cAAmC,CAAG,CAC1CC,UAAU,CAAE,WAAWT,QAAQ,iBAAiBA,QAAQ,IAAI,CAC5DU,OAAO,CAAET,SAAS,CAAG,CAAC,CAAG,CAC3B,CAAC,CAED;AACA,GAAIF,cAAc,GAAK,UAAU,CAAE,CACjCS,cAAc,CAACG,SAAS,CAAGV,SAAS,CAAG,eAAe,CAAG,kBAAkB,CAC7E,CAAC,IAAM,IAAIF,cAAc,GAAK,YAAY,CAAE,CAC1CS,cAAc,CAACG,SAAS,CAAGV,SAAS,CAAG,eAAe,CAAG,mBAAmB,CAC9E,CAAC,IAAM,IAAIF,cAAc,GAAK,OAAO,CAAE,CACrCS,cAAc,CAACG,SAAS,CAAGV,SAAS,CAAG,UAAU,CAAG,aAAa,CACnE,CAEA;AACA,KAAM,CAAAW,UAAU,CAAGb,cAAc,GAAK,MAAM,CAAG,CAAC,CAAC,CAAGS,cAAc,CAElE,mBACEf,IAAA,QAAKK,SAAS,CAAEA,SAAU,CAACe,KAAK,CAAED,UAAW,CAAAhB,QAAA,CAC1CO,eAAe,CACb,CAAC,CAEV,CAAC,CAED,cAAe,CAAAT,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}