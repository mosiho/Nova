{"ast":null,"code":"var _jsxFileName = \"/Users/mosiho/Projects/Nova/frontend/src/components/UI/Progress.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Progress = ({\n  value,\n  max = 100,\n  color = 'blue',\n  showValue = false,\n  valueFormat,\n  size = 'md',\n  label,\n  className = ''\n}) => {\n  // Ensure value is between 0 and max\n  const clampedValue = Math.max(0, Math.min(value, max));\n  const percentage = clampedValue / max * 100;\n\n  // Format the value display\n  const formattedValue = valueFormat ? valueFormat(clampedValue, max) : `${Math.round(percentage)}%`;\n\n  // Height based on size\n  const heightClass = {\n    sm: 'h-1.5',\n    md: 'h-2.5',\n    lg: 'h-4'\n  }[size];\n\n  // Color classes\n  const colorClass = {\n    blue: 'bg-blue-600',\n    green: 'bg-green-600',\n    red: 'bg-red-600',\n    yellow: 'bg-yellow-600',\n    gray: 'bg-gray-600',\n    purple: 'bg-purple-600'\n  }[color];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [(label || showValue) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-1\",\n      children: [label && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm font-medium text-gray-700\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), showValue && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm font-medium text-gray-500\",\n        children: formattedValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `progress ${heightClass} overflow-hidden`,\n      role: \"progressbar\",\n      \"aria-valuenow\": clampedValue,\n      \"aria-valuemin\": 0,\n      \"aria-valuemax\": max,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `progress-bar ${colorClass} ${heightClass}`,\n        style: {\n          width: `${percentage}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_c = Progress;\nexport default Progress;\nvar _c;\n$RefreshReg$(_c, \"Progress\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Progress","value","max","color","showValue","valueFormat","size","label","className","clampedValue","Math","min","percentage","formattedValue","round","heightClass","sm","md","lg","colorClass","blue","green","red","yellow","gray","purple","children","fileName","_jsxFileName","lineNumber","columnNumber","role","style","width","_c","$RefreshReg$"],"sources":["/Users/mosiho/Projects/Nova/frontend/src/components/UI/Progress.tsx"],"sourcesContent":["import React from 'react';\n\nexport type ProgressColor = 'blue' | 'green' | 'red' | 'yellow' | 'gray' | 'purple';\n\ninterface ProgressProps {\n  value: number;\n  max?: number;\n  color?: ProgressColor;\n  showValue?: boolean;\n  valueFormat?: (value: number, max: number) => string;\n  size?: 'sm' | 'md' | 'lg';\n  label?: React.ReactNode;\n  className?: string;\n}\n\nconst Progress: React.FC<ProgressProps> = ({\n  value,\n  max = 100,\n  color = 'blue',\n  showValue = false,\n  valueFormat,\n  size = 'md',\n  label,\n  className = ''\n}) => {\n  // Ensure value is between 0 and max\n  const clampedValue = Math.max(0, Math.min(value, max));\n  const percentage = (clampedValue / max) * 100;\n  \n  // Format the value display\n  const formattedValue = valueFormat \n    ? valueFormat(clampedValue, max) \n    : `${Math.round(percentage)}%`;\n  \n  // Height based on size\n  const heightClass = {\n    sm: 'h-1.5',\n    md: 'h-2.5',\n    lg: 'h-4'\n  }[size];\n  \n  // Color classes\n  const colorClass = {\n    blue: 'bg-blue-600',\n    green: 'bg-green-600',\n    red: 'bg-red-600',\n    yellow: 'bg-yellow-600',\n    gray: 'bg-gray-600',\n    purple: 'bg-purple-600'\n  }[color];\n  \n  return (\n    <div className={className}>\n      {(label || showValue) && (\n        <div className=\"flex justify-between items-center mb-1\">\n          {label && <div className=\"text-sm font-medium text-gray-700\">{label}</div>}\n          {showValue && <div className=\"text-sm font-medium text-gray-500\">{formattedValue}</div>}\n        </div>\n      )}\n      <div className={`progress ${heightClass} overflow-hidden`} role=\"progressbar\" \n          aria-valuenow={clampedValue} aria-valuemin={0} aria-valuemax={max}>\n        <div \n          className={`progress-bar ${colorClass} ${heightClass}`} \n          style={{ width: `${percentage}%` }}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Progress; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAe1B,MAAMC,QAAiC,GAAGA,CAAC;EACzCC,KAAK;EACLC,GAAG,GAAG,GAAG;EACTC,KAAK,GAAG,MAAM;EACdC,SAAS,GAAG,KAAK;EACjBC,WAAW;EACXC,IAAI,GAAG,IAAI;EACXC,KAAK;EACLC,SAAS,GAAG;AACd,CAAC,KAAK;EACJ;EACA,MAAMC,YAAY,GAAGC,IAAI,CAACR,GAAG,CAAC,CAAC,EAAEQ,IAAI,CAACC,GAAG,CAACV,KAAK,EAAEC,GAAG,CAAC,CAAC;EACtD,MAAMU,UAAU,GAAIH,YAAY,GAAGP,GAAG,GAAI,GAAG;;EAE7C;EACA,MAAMW,cAAc,GAAGR,WAAW,GAC9BA,WAAW,CAACI,YAAY,EAAEP,GAAG,CAAC,GAC9B,GAAGQ,IAAI,CAACI,KAAK,CAACF,UAAU,CAAC,GAAG;;EAEhC;EACA,MAAMG,WAAW,GAAG;IAClBC,EAAE,EAAE,OAAO;IACXC,EAAE,EAAE,OAAO;IACXC,EAAE,EAAE;EACN,CAAC,CAACZ,IAAI,CAAC;;EAEP;EACA,MAAMa,UAAU,GAAG;IACjBC,IAAI,EAAE,aAAa;IACnBC,KAAK,EAAE,cAAc;IACrBC,GAAG,EAAE,YAAY;IACjBC,MAAM,EAAE,eAAe;IACvBC,IAAI,EAAE,aAAa;IACnBC,MAAM,EAAE;EACV,CAAC,CAACtB,KAAK,CAAC;EAER,oBACEJ,OAAA;IAAKS,SAAS,EAAEA,SAAU;IAAAkB,QAAA,GACvB,CAACnB,KAAK,IAAIH,SAAS,kBAClBL,OAAA;MAAKS,SAAS,EAAC,wCAAwC;MAAAkB,QAAA,GACpDnB,KAAK,iBAAIR,OAAA;QAAKS,SAAS,EAAC,mCAAmC;QAAAkB,QAAA,EAAEnB;MAAK;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EACzE1B,SAAS,iBAAIL,OAAA;QAAKS,SAAS,EAAC,mCAAmC;QAAAkB,QAAA,EAAEb;MAAc;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpF,CACN,eACD/B,OAAA;MAAKS,SAAS,EAAE,YAAYO,WAAW,kBAAmB;MAACgB,IAAI,EAAC,aAAa;MACzE,iBAAetB,YAAa;MAAC,iBAAe,CAAE;MAAC,iBAAeP,GAAI;MAAAwB,QAAA,eACpE3B,OAAA;QACES,SAAS,EAAE,gBAAgBW,UAAU,IAAIJ,WAAW,EAAG;QACvDiB,KAAK,EAAE;UAAEC,KAAK,EAAE,GAAGrB,UAAU;QAAI;MAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACI,EAAA,GArDIlC,QAAiC;AAuDvC,eAAeA,QAAQ;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}