{"ast":null,"code":"var _jsxFileName = \"/Users/mosiho/Projects/Nova/frontend/src/components/UI/Skeleton.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Skeleton = ({\n  variant = 'text',\n  width,\n  height,\n  count = 1,\n  className = '',\n  circle = false\n}) => {\n  const getClassName = () => {\n    // If circle prop is true, override variant to 'circle'\n    const finalVariant = circle ? 'circle' : variant;\n    switch (finalVariant) {\n      case 'circle':\n        return 'skeleton-circle';\n      case 'text':\n        return 'skeleton-text';\n      default:\n        return 'skeleton';\n    }\n  };\n  const baseClass = getClassName();\n  const style = {};\n  if (width) {\n    style.width = typeof width === 'number' ? `${width}px` : width;\n  }\n  if (height) {\n    style.height = typeof height === 'number' ? `${height}px` : height;\n  }\n\n  // Create the specified number of skeleton items\n  const items = [];\n  for (let i = 0; i < count; i++) {\n    items.push(/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${baseClass} ${className}`,\n      style: style,\n      \"aria-hidden\": \"true\"\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: items\n  }, void 0, false);\n};\n\n// Predefined skeleton components\n_c = Skeleton;\nexport const SkeletonText = ({\n  lines = 3,\n  className = '',\n  lineHeight,\n  width\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: Array.from({\n      length: lines\n    }).map((_, index) => /*#__PURE__*/_jsxDEV(Skeleton, {\n      variant: \"text\",\n      className: \"mb-2 last:mb-0\",\n      height: lineHeight,\n      width: index === lines - 1 && width ? typeof width === 'number' ? `${width * 0.8}px` : width : width\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_c2 = SkeletonText;\nexport const SkeletonCard = ({\n  header = true,\n  footer = false,\n  lines = 3,\n  className = ''\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card ${className}`,\n    children: [header && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: /*#__PURE__*/_jsxDEV(Skeleton, {\n        variant: \"text\",\n        width: \"40%\",\n        height: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: /*#__PURE__*/_jsxDEV(SkeletonText, {\n        lines: lines\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), footer && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end\",\n        children: /*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"rectangle\",\n          width: 100,\n          height: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_c3 = SkeletonCard;\nexport default Skeleton;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Skeleton\");\n$RefreshReg$(_c2, \"SkeletonText\");\n$RefreshReg$(_c3, \"SkeletonCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","Skeleton","variant","width","height","count","className","circle","getClassName","finalVariant","baseClass","style","items","i","push","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","SkeletonText","lines","lineHeight","Array","from","length","map","_","index","_c2","SkeletonCard","header","footer","_c3","$RefreshReg$"],"sources":["/Users/mosiho/Projects/Nova/frontend/src/components/UI/Skeleton.tsx"],"sourcesContent":["import React from 'react';\n\nexport type SkeletonVariant = 'text' | 'circle' | 'rectangle';\n\ninterface SkeletonProps {\n  variant?: SkeletonVariant;\n  width?: string | number;\n  height?: string | number;\n  count?: number;\n  className?: string;\n  circle?: boolean;\n}\n\nconst Skeleton: React.FC<SkeletonProps> = ({\n  variant = 'text',\n  width,\n  height,\n  count = 1,\n  className = '',\n  circle = false\n}) => {\n  const getClassName = () => {\n    // If circle prop is true, override variant to 'circle'\n    const finalVariant = circle ? 'circle' : variant;\n    \n    switch (finalVariant) {\n      case 'circle':\n        return 'skeleton-circle';\n      case 'text':\n        return 'skeleton-text';\n      default:\n        return 'skeleton';\n    }\n  };\n  \n  const baseClass = getClassName();\n  const style: React.CSSProperties = {};\n  \n  if (width) {\n    style.width = typeof width === 'number' ? `${width}px` : width;\n  }\n  \n  if (height) {\n    style.height = typeof height === 'number' ? `${height}px` : height;\n  }\n  \n  // Create the specified number of skeleton items\n  const items = [];\n  for (let i = 0; i < count; i++) {\n    items.push(\n      <div\n        key={i}\n        className={`${baseClass} ${className}`}\n        style={style}\n        aria-hidden=\"true\"\n      />\n    );\n  }\n  \n  return <>{items}</>;\n};\n\n// Predefined skeleton components\ninterface SkeletonTextProps {\n  lines?: number;\n  className?: string;\n  lineHeight?: string | number;\n  width?: string | number;\n}\n\nexport const SkeletonText: React.FC<SkeletonTextProps> = ({\n  lines = 3,\n  className = '',\n  lineHeight,\n  width\n}) => {\n  return (\n    <div className={className}>\n      {Array.from({ length: lines }).map((_, index) => (\n        <Skeleton\n          key={index}\n          variant=\"text\"\n          className=\"mb-2 last:mb-0\"\n          height={lineHeight}\n          width={index === lines - 1 && width ? (typeof width === 'number' ? `${width * 0.8}px` : width) : width}\n        />\n      ))}\n    </div>\n  );\n};\n\ninterface SkeletonCardProps {\n  header?: boolean;\n  footer?: boolean;\n  lines?: number;\n  className?: string;\n}\n\nexport const SkeletonCard: React.FC<SkeletonCardProps> = ({\n  header = true,\n  footer = false,\n  lines = 3,\n  className = ''\n}) => {\n  return (\n    <div className={`card ${className}`}>\n      {header && (\n        <div className=\"card-header\">\n          <Skeleton variant=\"text\" width=\"40%\" height={20} />\n        </div>\n      )}\n      <div className=\"card-body\">\n        <SkeletonText lines={lines} />\n      </div>\n      {footer && (\n        <div className=\"card-footer\">\n          <div className=\"flex justify-end\">\n            <Skeleton variant=\"rectangle\" width={100} height={30} />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Skeleton; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}